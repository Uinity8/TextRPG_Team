namespace TextRPG_Team.Scenes;

using Objects;
using static ConsoleColor;

public class ShopScene : IScene
{
    public enum State
    {
        Default,
        Buy,
        Sell,
    }

    State _state;
    private readonly GameState _gameState;

    private string _strTitle ="";

    public ShopScene(GameState gameState, State state = State.Default) //DI ÏùòÏ°¥ÏÑ± Ï£ºÏûÖ
    {
        _gameState = gameState;
        _state = state;
        switch (_state)
        {
            case State.Default:
                _strTitle = "ÌïÑÏöîÌïú ÏïÑÏù¥ÌÖúÏùÑ ÏñªÏùÑ Ïàò ÏûàÎäî ÏÉÅÏ†êÏûÖÎãàÎã§.\n";
                break;
            case State.Buy:
                _strTitle = "[ Íµ¨Îß§ÌïòÍ∏∞ ]\n";
                break;
            case State.Sell:
                _strTitle = "[ ÌåêÎß§ÌïòÍ∏∞ ]\n";
                break;
        }
    }

    public void Run()
    {
        Console.Clear(); //Ï≤òÏùå ÏßÑÏûÖÏãú ÌôîÎ©¥ ÏßÄÏö∞Í∏∞
        ShowScreen();
    }

    public IScene? GetNextScene()
    {
        return _state switch
        {
            State.Default => GetInputForDefault(),
            State.Buy => GetInputForBuy(),
            State.Sell => GetInputForSell(),
            _ => null
        };
    }

    private IScene? GetInputForDefault() // Í∏∞Î≥∏ÏÉÅÌÉú
    {
        int input = Utility.GetInput(0, 2);
        return input switch
        {
            1 => new ShopScene(_gameState, State.Buy),
            2 => new ShopScene(_gameState, State.Sell),
            0 => new MainScene(_gameState),
            _ => null
        };
    }

    private IScene? GetInputForBuy() // Íµ¨Îß§ÌïòÍ∏∞
    {
        int input = Utility.GetInput(0, _gameState._itemList.Count, " Íµ¨Îß§ÌïòÏã§ ÏïÑÏù¥ÌÖúÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.");
        switch (input)
        {
            case 0:
                return new ShopScene(_gameState);
            default:
                Item item = _gameState._itemList[input - 1]; 
                if(_gameState.Player.BuyItem(item)) item.itemPurchase = true;
                return this;
        }
    }

    private IScene? GetInputForSell() // ÌåêÎß§ÌïòÍ∏∞
    {
        int input = Utility.GetInput(0, _gameState.Player.Inventory.Count, " ÌåêÎß§ÌïòÏã§ ÏïÑÏù¥ÌÖúÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.");
        switch (input)
        {
            case 0:
                return new ShopScene(_gameState);
            default:
                Item item = _gameState._itemList[input - 1];
                item.itemPurchase = _gameState.Player.TrySell(item);
                return this;
        }
    }


    private void ShowScreen()
    {
        Console.WriteLine(new string('=', Utility.Width));
        Utility.AlignCenter("ÏÉÅÏ†ê\n", DarkCyan);
        Utility.AlignCenter(_strTitle);
        Console.WriteLine(new string('=', Utility.Width));
        Utility.AlignRight("[ Î≥¥Ïú† Í≥®Îìú ]\n", Utility.Width);
        Console.WriteLine(" [ ÏïÑÏù¥ÌÖú Î™©Î°ù ]");

        Utility.AlignRight($"üí∞", Utility.Width - 11);
        Utility.AlignRight($"{_gameState.Player.Gold}", 7);
        Utility.ColorWriteLine(" G", Yellow);
        Console.WriteLine(new string('-', Utility.Width));

        switch (_state)
        {
            case State.Default:
                DefaultScreen();
                break;
            case State.Buy:
                BuyScreen();
                break;
            case State.Sell:
                SellScreen();
                break;
        }
    }

    private void DefaultScreen() //Í∏∞Î≥∏ÌôîÎ©¥
    {
        foreach (var item in _gameState._itemList)
        {
            Utility.AlignLeft(item.Icon, 7);
            ConsoleColor color = item.Price > _gameState.Player.Gold ? Red : White;
            item.PrintNameAndEffect(color);
            item.PrintPriceForBuy(color);
            item.PrintInfo();
        }
        Utility.PrintLogs();
        Console.Write(" 1. Íµ¨Îß§ÌïòÍ∏∞");
        Console.Write(" 2. ÌåêÎß§ÌïòÍ∏∞");
        Console.WriteLine(" 0. ÎÇòÍ∞ÄÍ∏∞");
    }

    private void BuyScreen() //Íµ¨Îß§ÌïòÍ∏∞
    {
        int i = 1;
        foreach (var item in _gameState._itemList)
        {
            Utility.AlignLeft(item.Icon, 7);
            Utility.ColorWrite($"{(i++)}. ", DarkMagenta);
            ConsoleColor color = item.Price > _gameState.Player.Gold ? Red : White;
            item.PrintNameAndEffect(color);
            item.PrintPriceForBuy(color);
            item.PrintInfo();
        }
        Utility.PrintLogs();
        Console.WriteLine(" 0. Ï∑®ÏÜå");
    }

    private void SellScreen() //ÌåêÎß§ÌïòÍ∏∞
    {
        if (_gameState.Player.Inventory.Count == 0)
        {
            for (int i = 0; i < 6; i++)
                Console.WriteLine(new string(' ', Utility.Width));
            Utility.AlignCenter("Î≥¥Ïú†Ï§ëÏù∏ ÏïÑÏù¥ÌÖúÏù¥ ÏóÜÏäµÎãàÎã§.\n");
            for (int i = 0; i < 5; i++)
                Console.WriteLine(new string(' ', Utility.Width));
            //Console.WriteLine(new string('-', Utility.Width));
        }
        else
        {
            var invetory = _gameState.Player.Inventory;
            for (int i = 0; i < 10; i++)
            {
                if (i >= invetory.Count)
                {
                    Console.WriteLine(new string(' ', Utility.Width));
                    continue;
                }

                Utility.AlignLeft(invetory[i].Icon, 7);
                Utility.ColorWrite($"{(i+1)}. ", DarkMagenta);
                invetory[i].PrintNameAndEffect(White);
                invetory[i].PrintPriceForSell();
                invetory[i].PrintInfo();
            }
        }
        Utility.PrintLogs();
        Console.WriteLine(" 0. Ï∑®ÏÜå");
    }
}